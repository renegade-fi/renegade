on:
  push:
    branches:
      - 'staging'
      - 'testnet'
      - 'mainnet'

name: Upgrade Relayer Clusters

jobs:
  build-and-push-ecr:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ fromJson(steps.docker-build-push.outputs.metadata)['image.name'] }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push image to Amazon ECR
        id: docker-build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/release/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/renegade-${{ github.ref_name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  setup-cluster-names:
    runs-on: ubuntu-latest
    outputs:
      cluster_names: ${{ steps.gen-cluster-names.outputs.cluster_names }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - id: gen-cluster-names
        run: |
          if [[ "${{ github.ref_name }}" == "staging" ]]; then
            NUM_CLUSTERS=${{ vars.NUM_CLUSTERS_STAGING }}
          elif [[ "${{ github.ref_name }}" == "testnet" ]]; then
            NUM_CLUSTERS=${{ vars.NUM_CLUSTERS_TESTNET }}
          elif [[ "${{ github.ref_name }}" == "mainnet" ]]; then
            NUM_CLUSTERS=${{ vars.NUM_CLUSTERS_MAINNET }}
          else
            echo "Unsupported branch. Defaulting to 1 cluster."
            NUM_CLUSTERS=1
          fi
          names=$(python -c "import json; print(json.dumps([ \"${{ github.ref_name }}-cluster\" + str(i) for i in range($NUM_CLUSTERS)]))")
          echo "cluster_names={ \"cluster\": $names }" >> $GITHUB_OUTPUT

  upgrade-relayer-clusters:
    runs-on: ubuntu-latest
    needs: [build-and-push-ecr, setup-cluster-names]
    strategy:
      matrix: ${{fromJson(needs.setup-cluster-names.outputs.cluster_names)}}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Get the existing task definitions
        id: fetch-task-def
        run: |
          aws ecs describe-task-definition --task-definition "${{ matrix.cluster }}-task-def" --query 'taskDefinition' > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: update-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: relayer-node
          image: ${{ needs.build-and-push-ecr.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task-def.outputs.task-definition }}
          service: ${{ matrix.cluster }}-service
          cluster: ${{ matrix.cluster }}
          wait-for-service-stability: true
